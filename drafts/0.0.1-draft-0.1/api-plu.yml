openapi: 3.0.3
info:
  title: PLU API
  version: 0.0.1
  description: This is the API for the PLU Information System.
  contact:
    name: wemove digital solutions GmbH
    url: https://www.wemove.com
    email: contact@wemove.dom
servers:
  - url: '{baseUrl}/v1'
    description: Development server
tags:
  - name: Capabilities
  - name: Data
paths:
  /:
    get:
      tags:
        - Capabilities
      summary: landing page
      description: |-
        The landing page provides links to the API definition, the conformance
        statements and to the record collections in this dataset.
      operationId: getLandingPage
      responses:
        200:
          description: Successful operation
          $ref: '#/components/responses/LandingPage'
        500:
          $ref: '#/components/responses/500GenericError'
  /conformance:
    get:
      tags:
        - Capabilities
      summary: information about specifications that this API conforms to
      description: |-
        A list of all conformance classes specified in a standard that the
        server conforms to.
      operationId: getConformanceDeclaration
      responses:
        200:
          description: Successful operation
          $ref: '#/components/responses/ConformanceDeclaration'
        500:
          $ref: '#/components/responses/500GenericError'
  /version:
    get:
      summary: Get version information
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
        500:
          $ref: '#/components/responses/500GenericError'
  /collections:
    get:
      tags:
        - Capabilities
      summary: the record collections in the dataset
      operationId: getCollections
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Collections'
        500:
          $ref: '#/components/responses/500GenericError'
  /collections/{collectionId}: 
    get:
      tags:
        - Capabilities
      summary: |-
        describe the record collection with id `collectionId`
      operationId: describeCollection
      parameters:
        - $ref: '#/components/parameters/collectionId'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Collection'
        404:
          $ref: '#/components/responses/404NotFound'
        500:
          $ref: '#/components/responses/500GenericError'
  /collections/{collectionId}/items:
    get:
      tags:
        - Data
      summary: fetch records
      description: |-
        Fetch records of the record collection with id `collectionId`.
        Every record in a dataset belongs to a collection. A dataset may
        consist of multiple record collections. A record collection is often a
        collection of records of a similar type, based on a common schema.
        Use content negotiation to request HTML or GeoJSON.
      operationId: getRecords
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/datetime'
        - $ref: '#/components/parameters/pluProcedureState'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/pluPlanType'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Records'
        400:
          $ref: '#/components/responses/400InvalidInput'
        404:
          $ref: '#/components/responses/404NotFound'
        500:
          $ref: '#/components/responses/500GenericError'
    post: 
      tags:
        - Data
      summary: post a new record
      description: |-
        post a record into the collection with id 'collectionID'.
      parameters:
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/recordPLU'
      responses:
        200:
          description: Successful operation
        400:
          $ref: '#/components/responses/400InvalidInput'
        500:
          $ref: '#/components/responses/500GenericError'
  /collections/{collectionId}/items/{recordId}:
    get:
      tags:
        - Data
      summary: fetch a single record
      description: |-
        Fetch the record with id `recordId` in the record collection
        with id `collectionId`.
        Use content negotiation to request HTML or GeoJSON.
      operationId: getRecord
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/recordId'
        - $ref: '#/components/parameters/title'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Record'
        404:
          $ref: '#/components/responses/404NotFound'
        500:
          $ref: '#/components/responses/500GenericError'
components:
  parameters:
    bbox:
      name: bbox
      in: query
      description: |-
        Only records that have a geometry that intersects the bounding box are
        selected. The bounding box is provided as four or six numbers,
        depending on whether the coordinate reference system includes a
        vertical axis (height or depth):

        * Lower left corner, coordinate axis 1
        * Lower left corner, coordinate axis 2
        * Minimum value, coordinate axis 3 (optional)
        * Upper right corner, coordinate axis 1
        * Upper right corner, coordinate axis 2
        * Maximum value, coordinate axis 3 (optional)

        The coordinate reference system of the values is WGS 84 long/lat
        (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different
        coordinate reference system is specified in the parameter `bbox-crs`.

        For WGS 84 longitude/latitude the values are in most cases the sequence
        of minimum longitude, minimum latitude, maximum longitude and maximum
        latitude.

        However, in cases where the box spans the antimeridian the first value
        (west-most box edge) is larger than the third value (east-most box
        edge).

        If the vertical axis is included, the third and the sixth number are
        the bottom and the top of the 3-dimensional bounding box.

        If a record has multiple spatial geometry properties, it is the
        decision of the server whether only a single spatial geometry property
        is used to determine the extent or all relevant geometries.
      required: false
      schema:
        type: array
        oneOf:
          - minItems: 4
            maxItems: 4
          - minItems: 6
            maxItems: 6
        items:
          type: number
      style: form
      explode: false
    datetime:
      name: datetime
      in: query
      description: |-
        Either a date-time or an interval, open or closed. Date and time
        expressions adhere to RFC 3339. Open intervals are expressed using
        double-dots.

        Examples:

        * A date-time: "2018-02-12T23:20:50Z"
        * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z"
        * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"

        Only records that have a temporal property that intersects the value of
        `datetime` are selected.  It is left to the decision of the server
        whether only a single temporal property is used to determine the extent
        or all relevant temporal properties.
      required: false
      schema:
        type: string
      style: form
      explode: false
    pluProcedureState:
      name: pluProcState
      in: query
      description: The optional parameter supports searching by state of the procedure.  Only
        states that are equal to one of the listed values shall be selected.
      required: false
      schema:
        type: string
        enum: [in Aufstellung, festgesetzt, wirksam, in Kraft getreten, aufgehoben, außer Kraft]
      explode: false
      style: form
    collectionId:
      name: collectionId
      in: path
      description: local identifier of a collection
      required: true
      schema:
        type: string
        example: HH
    recordId:
      name: recordId
      in: path
      description: local identifier of a procedure
      required: true
      schema:
        type: string
        example: f08a255e-2c11-49dd-bdf9-88a0dcbe2aa6
    q:
      name: q
      in: query
      description: the search term
      required: true
      schema:
        type: string
        minLength: 3
        example: Windkraft
    title:
      name: title
      in: query
      description: the title of the procedure
      required: false 
      schema:
        type: string
        example: Aufstellung eines Bebauungsplanes
    pluPlanType:
      name: pluPlanType
      in: query
      description: the type of the plan
      required: false 
      schema:
        type: string
        enum: [Bebauungsplan, Regionalplan, Flächennutzungsplan]
      explode: false 
      style: form
  schemas:
    collectionInfo:
      type: object
      required:
        - id
        - links
      properties:
        id:
          description: identifier of the collection used, for example, in URIs
          type: string
          example: HH
        title:
          description: human readable title of the collection
          type: string
        description:
          description: a description of the records in the collection
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
        crs:
          description: |-
            the list of coordinate reference systems supported by the API
          type: array
          items:
            type: string
          default:
            - http://www.opengis.net/def/crs/OGC/1.3/CRS84
    collections:
      type: object
      required:
       - links
       - collections
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
        collections:
          type: array
          items:
            $ref: '#/components/schemas/collectionInfo'
    confClasses: 
      type: object
      required:
        - conformsTo
      properties:
        conformsTo:
          type: array
          items:
            type: string
    Error:
      additionalProperties: true # tbd
    extent:
      type: object
      description: |-
        The extent of the records in the collection. In the Core only spatial
        and temporal extents are specified. Extensions may add additional
        members to represent other extents, for example, thermal or pressure
        ranges.
      properties:
        spatial:
          description: |-
            The spatial extent of the records in the collection.
          type: object
          properties:
            bbox:
              description: |-
                One or more bounding boxes that describe the spatial extent of
                the dataset. In the Core only a single bounding box is
                supported. Extensions may support additional areas. If multiple
                areas are provided, the union of the bounding boxes describes
                the spatial extent.
              type: array
              minItems: 1
              items:
                description: |-
                  Each bounding box is provided as four or six numbers,
                  depending on whether the coordinate reference system
                  includes a vertical axis (height or depth):
                  * Lower left corner, coordinate axis 1
                  * Lower left corner, coordinate axis 2
                  * Minimum value, coordinate axis 3 (optional)
                  * Upper right corner, coordinate axis 1
                  * Upper right corner, coordinate axis 2
                  * Maximum value, coordinate axis 3 (optional)
                  The coordinate reference system of the values is WGS 84
                  long/lat (http://www.opengis.net/def/crs/OGC/1.3/CRS84)
                  unless a different coordinate reference system is specified
                  in `crs`.
                  For WGS 84 longitude/latitude the values are in most cases
                  the sequence of minimum longitude, minimum latitude, maximum
                  longitude and maximum latitude. However, in cases where the
                  box spans the antimeridian the first value (west-most box
                  edge) is larger than the third value (east-most box edge).
                  If the vertical axis is included, the third and the sixth
                  number are the bottom and the top of the 3-dimensional
                  bounding box.
                  If a record has multiple spatial geometry properties, it is
                  the decision of the server whether only a single spatial
                  geometry property is used to determine the extent or all
                  relevant geometries.
                type: array
                oneOf:
                  - minItems: 4
                    maxItems: 4
                  - minItems: 6
                    maxItems: 6
                items:
                  type: number
                example:
                  - -180
                  - -90
                  - 180
                  - 90
            crs:
              description: |-
                Coordinate reference system of the coordinates in the spatial
                extent (property `bbox`). The default reference system is WGS
                84 longitude/latitude. In the Core this is the only supported
                coordinate reference system. Extensions may support additional
                coordinate reference systems and add additional enum values.
              type: string
              enum:
                - 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
              default: 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
        temporal:
          description: |-
            The temporal extent of the records in the collection.
          type: object
          properties:
            interval:
              description: |-
                One or more time intervals that describe the temporal extent of
                the dataset. The value `null` is supported and indicates an
                open time interval. In the Core only a single time interval is
                supported. Extensions may support multiple intervals. If
                multiple intervals are provided, the union of the intervals
                describes the temporal extent.
              type: array
              minItems: 1
              items:
                description: |-
                  Begin and end times of the time interval. The timestamps are
                  in the temporal coordinate reference system specified in
                  `trs`. By default this is the Gregorian calendar.
                type: array
                minItems: 2
                maxItems: 2
                items:
                  type: string
                  format: date-time
                  nullable: true
                example:
                  - '2011-11-11T12:22:11Z'
                  - null
            trs:
              description: |-
                Coordinate reference system of the coordinates in the temporal
                extent (property `interval`). The default reference system is
                the Gregorian calendar. In the Core this is the only supported
                temporal coordinate reference system. Extensions may support
                additional temporal coordinate reference systems and add
                additional enum values.
              type: string
              enum:
                - 'http://www.opengis.net/def/uom/ISO-8601/0/Gregorian'
              default: 'http://www.opengis.net/def/uom/ISO-8601/0/Gregorian'
    recordsPLU:
      type: object
      required:
        - type
        - features
      properties:
        type:
          type: string
          enum:
            - FeatureCollection
        features:
          type: array
          items:
            $ref: "#/components/schemas/recordPLU"
        links:
          type: array
          items:
            $ref: "#/components/schemas/link"
    landingPage:
      type: object
      required:
        - links
      properties:
        title:
          type: string
        description:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
    link:
      type: object
      required:
        - href
      properties:
        href:
          type: string
        rel:
          type: string
        type:
          type: string
        hreflang:
          type: string
        title:
          type: string
        length:
          type: integer
    recordPLU:
      type: object
      required:
        - id
        - geometry
        - properties
      properties:
        id:
          type: string
          description: A unique identifier of the catalogue record.
          format: uri
        geometry:
          $ref: "#/components/schemas/polygonPLU"
        properties:
          type: object
          required:
            - type
            - title
          properties:
            recordCreated:
              type: string
              description: Date of creation of this record.
              format: date-time
            recordUpdated:
              type: string
              description: The most recent date on which the record was changed.
              format: date-time
            type:
              type: string
              description: The type of EIA procedure.
              format: uri
            title:
              type: string
              description: Title of the EIA procedure.
            description:
              type: string
              description: A free-text description of the EIA procedure.
            formats:
              type: array
              description: A list of available distributions of the resource.
              items:
                type: string
            contactPoint:
              type: string
              description: |-
                 Link to relevant contact information. Recommended best
                 practice is to use a VCard
                 (see https://www.w3.org/TR/vcard-rdf/).
              format: uri
            extent:
              $ref: "#/components/schemas/extent"
            associations:
              type: array
              description: |-
                A list of links for accessing the resource (e.g. download
                link, access link) in one of the supported distribution
                formats and/or links to other resources associated with
                this resource.
              items:
                $ref: "#/components/schemas/link"
          additionalProperties: true
    polygonPLU:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - Polygon
        coordinates:
          type: array
          items:
            type: array
            minItems: 4
            items:
              type: array
              minItems: 2
              items:
                type: number
    Version:
      type: object
      description: A version
      properties:
        build:
          type: object
          description: A build description
          properties:
            version:
              type: string
            date:
              type: string
            commit_id:
              type: string
          required:
            - version
            - date
  responses:
    Collection:
      description: |-
        Information about the record collection with id `collectionId`.
        The response contains a link to the items in the collection
        (path `/collections/{collectionId}/items`, link relation `items`)
        as well as key information about the collection. This information
        includes:
        * A local identifier for the collection that is unique for the +
          catalogue;
        * A list of coordinate reference systems (CRS) in which geometries +
          may be returned by the server. The first CRS is the default +
          coordinate reference system (the default is always WGS 84 with +
          axis order longitude/latitude);
        * An optional title and description for the collection;
        * An optional extent that can be used to provide an indication of +
          the spatial and temporal extent of the collection - typically +
          derived from the data;
        * An optional indicator about the type of the items in the collection +
          (the default value, if the indicator is not provided, is 'record').
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/collectionInfo'
        text/html:
          schema:
            type: string
    Collections:
      description: |-
        The record collections shared by this API.
        Catalogues are organized as one or more record collections. This
        resource provides information about and access to these collections.
        The response contains the list of record collections (itemType=record).
        For each record collection, a link to the items in the collection
        (path `/collections/{collectionId}/items`, link relation `items`) as
        well as key information about the collection. This information
        includes...
        * A local identifier for the collection that is unique for the +
          catalogue;
        * A list of coordinate reference systems (CRS) in which geometries +
          may be returned by the server. The first CRS is the default +
          coordinate reference system (the default is always WGS 84 with axis +
          order longitude/latitude);
        * An optional title and description for the collection;
        * An optional extent that can be used to provide an indication of the +
          spatial and temporal extent of the collection - typically derived +
          from the data;
        * An optional indicator about the type of the items in the collection +
          (the default value, if the indicator is not provided, is 'record').
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/collections'
        text/html:
          schema:
            type: string   
    ConformanceDeclaration:
      description: |-
       The URIs of all conformance classes supported by the server. To support "generic" clients that want to access multiple OGC API Records implementations - and not "just" a specific API / server, the server declares the conformance classes it implements and conforms to.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/confClasses'
        text/html:
          schema:
            type: string
    LandingPage:
      description: |-
        The landing page provides links to the API definition and the Record
        Collections (path `/collections`, link relation
        `data`).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/landingPage'
        text/html:
          schema:
            type: string
    Record:
      description: |-
        Fetch the record with id `recordId` in the record collection
        with id `collectionId`.  The XML representation of a record
        is an ATOM entry.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/recordPLU'
        text/html:
          schema:
            type: string
    Records:
      description: |-
        The response is a document consisting of records in the collection.
        The records included in the response are determined by the server
        based on the query parameters of the request. To support access to
        larger collections without overloading the client, the API supports
        paged access with links to the next page, if more records are selected
        that the page size.
        The `bbox` and `datetime` parameter can be used to select only a
        subset of the records in the collection (the records that are in the
        bounding box or time interval). The `bbox` parameter matches all records
        in the collection that are not associated with a location, too. The
        `datetime` parameter matches all records in the collection that are
        not associated with a time stamp or interval, too.
        The `limit` parameter may be used to control the subset of the
        selected records that should be returned in the response, the page size.
        Each page may include information about the number of selected and
        returned records (`numberMatched` and `numberReturned`) as well as
        links to support paging (link relation `next`).
        The XML representation of the response document is an ATOM feed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/recordsPLU'
        text/html:
          schema:
            type: string
    400InvalidInput:
      description: Invalid input
    401UnauthorizedRequest:
      description: Unauthorized request
    404NotFound:
      description: Not found
    500GenericError:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'